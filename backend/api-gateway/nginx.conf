# TalentSol ATS - Multi-API Gateway Configuration
# nginx.conf for API Gateway with modern data stack compatibility

upstream postgres_api {
    server postgres-api:5000;
    keepalive 32;
}

upstream rest_api {
    server rest-api:3000;
    keepalive 32;
}

upstream graphql_api {
    server graphql-api:4000;
    keepalive 32;
}

upstream ai_api {
    server ai-api:8000;
    keepalive 32;
}

upstream mdx_api {
    server mdx-api:7000;
    keepalive 32;
}

upstream dax_api {
    server dax-api:6000;
    keepalive 32;
}

upstream websocket_api {
    server websocket-api:9000;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=ai:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=sql:10m rate=50r/m;
limit_req_zone $binary_remote_addr zone=graphql:10m rate=200r/m;

# Cache zones
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=500m inactive=24h use_temp_path=off;

server {
    listen 80;
    server_name api.talentsol.local;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # CORS headers
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight requests
    location ~ ^/api/ {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # PostgreSQL-compatible SQL API
    location /sql/ {
        limit_req zone=sql burst=10 nodelay;
        
        proxy_pass http://postgres_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching for read-only queries
        proxy_cache api_cache;
        proxy_cache_valid 200 30m;
        proxy_cache_key "$scheme$request_method$host$request_uri$request_body";
        proxy_cache_methods GET POST;
        
        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # REST API v1 (Current implementation)
    location /api/v1/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://rest_api/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache GET requests only
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_methods GET;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # GraphQL API
    location /graphql {
        limit_req zone=graphql burst=50 nodelay;
        
        proxy_pass http://graphql_api/graphql;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Only cache GET requests (queries), not mutations
        proxy_cache api_cache;
        proxy_cache_valid 200 2m;
        proxy_cache_methods GET;
        proxy_no_cache $request_method = POST;
        
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # AI/ML API
    location /ai/ {
        limit_req zone=ai burst=5 nodelay;
        
        proxy_pass http://ai_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeout for AI processing
        proxy_read_timeout 300s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Cache AI results for repeated requests
        proxy_cache api_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_key "$scheme$request_method$host$request_uri$request_body";
        
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # MDX API (Documentation)
    location /mdx/ {
        proxy_pass http://mdx_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Long cache for documentation
        proxy_cache static_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # DAX API (Analytics)
    location /dax/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://dax_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Medium cache for analytics
        proxy_cache api_cache;
        proxy_cache_valid 200 15m;
        proxy_cache_key "$scheme$request_method$host$request_uri$args";
        
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # WebSocket API for real-time features
    location /ws/ {
        proxy_pass http://websocket_api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60s;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API documentation
    location /docs {
        proxy_pass http://mdx_api/docs;
        proxy_set_header Host $host;
        
        proxy_cache static_cache;
        proxy_cache_valid 200 30m;
    }
    
    # Metrics endpoint (Prometheus compatible)
    location /metrics {
        access_log off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://rest_api/metrics;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name api.talentsol.local;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/talentsol.crt;
    ssl_certificate_key /etc/ssl/private/talentsol.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Include all location blocks from HTTP server
    include /etc/nginx/conf.d/api-locations.conf;
}
